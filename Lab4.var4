Создать базовый класс «прямоугольник». Элементы класса: поля, задающие
длины сторон (статус доступа protected); конструктор для инициализации полей;
функция для вычисления площади прямоугольника; функция для печати полей
значения площади. Создать производный класс «прямоугольный параллелепипед».
Элементы класса: дополнительное поле, задающее высоту; конструктор для
инициализации полей; переопределенная функция для вычисления объема (вместо
площади) (внутри переопределенной функции должна вызываться функция из
базового класса); переопределенная функция для печати полей и значения объема.
Создать по 1 объекту каждого из классов. Показать вызов созданных функций.
Обеспечить динамический полиморфизм (вызов функций через указатель одного типа,
настроенный на объект другого типа).




// Lab4.Bogatyrev.IU8-22.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include "conio.h"
#include <iostream>
#include <ctime>

using namespace std;

//базовый класс - прямоугольник
class rectangle
{
protected:
  int length;
	int width;
public:
	rectangle(int a, int b);
	~rectangle();
	//виртуальная функция расчета площади прямоугольника
	virtual int size()
	{
		return (length*width);
	}
	//виртуальная функция печати данных
	virtual void data_print()
	{
		cout << "length " << length << ", width " << width;
	}
	
};

//конструктор базового класса
rectangle::rectangle(int a, int b)
{
	length=a;
	width=b;
}

//его деструктор
rectangle::~rectangle()
{
}

//производный класс - параллелепипед
class box : public rectangle
{
	int height;
public:
	box(int a, int b, int c);
	~box();
	//переопределенная функция, вместо площади считает объём
	int size()
	{
		return (rectangle::size()*height);
	}
	//переопределенная функция печати данных
	void data_print()
	{
		rectangle::data_print();
		cout << ", height " << height;
	};
	
};

//конструктор производного класса
box::box(int a, int b, int c):rectangle(a,b)
{	
	height=c;
}

//деструктор
box::~box()
{
}


int main(int argc, char* argv[])
{
	srand(time(NULL));
	//генерируем параметры коробки
	int ln, wd, ht;
	do
	{
		ln=rand()%100;
		wd=rand()%100;
		ht=rand()%100;
	} while ((ln==0)||(wd==0)||(ht==0));
	//создаем по одному объекту базового и производного классов
	rectangle rc(ln,wd);
	box bx(ln,wd,ht);
	//указатель на объект базового класса
	rectangle *prc=&rc;
	cout << "RECTANGLE" << endl;
	//вызов функций базового класса
	prc->data_print();
	cout << endl << "square " << prc->size();
	cout << endl << endl;
	//указываем на объект производного класса
	prc=&bx;
	cout << "BOX" << endl;
	//и вызываем оттуда переопределенные функции
	prc->data_print();
	cout << endl << "capacity " << prc->size();

	_getch();
	return 0;
}

